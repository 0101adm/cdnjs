if(typeof process!=="undefined"){require("amd-loader")}define(function(e,f,d){var b=e("./edit_session").EditSession;var h=e("./editor").Editor;var g=e("./test/mockrenderer").MockRenderer;var i=e("./multi_select").MultiSelect;var c=e("./snippets").snippetManager;var a=e("./test/assertions");d.exports={setUp:function(j){this.editor=new h(new g());j()},"test: textmate style format strings":function(){var j=c.tmStrFormat;c.tmStrFormat("hello",{guard:"(..)(.)(.)",flag:"g",fmt:"a\\UO\\l$1\\E$2"})=="aOHElo"},"test: parse snipmate file":function(){var k=[{name:"a",guard:"(?:(=)|(:))?s*)",trigger:"\\(?f",endTrigger:"\\)",endGuard:"",content:"{$0}\n"},{tabTrigger:"f",name:"f function",content:"function"}];var j=c.parseSnippetFile("name a\nregex /(?:(=)|(:))?s*)/\\(?f/\\)/\n\t{$0}\n\t\n\n#function\nsnippet f function\n\tfunction");a.equal(JSON.stringify(k,null,4),JSON.stringify(j,null,4))},"test: parse snippet":function(){var j="-\\$$2a${1:x${$2:y$3\\}\\n\\}$TM_SELECTION}";var k=c.tokenizeTmSnippet(j);a.equal(k.length,15);a.equal(k[4],k[14]);a.equal(k[2].tabstopId,2);var j="\\}${var/as\\/d/\\ul\\//g:s}";var k=c.tokenizeTmSnippet(j);a.equal(k.length,4);a.equal(k[1],k[3]);a.equal(k[2],"s");a.equal(k[1].text,"var");a.equal(k[1].fmt,"\\ul\\/");a.equal(k[1].guard,"as\\/d");a.equal(k[1].flag,"g")},"test: expand snippet with nested tabstops":function(){var j="-${1}-${1:1}--${2:2 ${3} 2}-${3:3 $1 3}-${4:4 $2 4}";this.editor.setValue("");c.insertSnippet(this.editor,j);a.equal(this.editor.getValue(),"-1-1--2 3 1 3 2-3 1 3-4 2 3 1 3 2 4");a.equal(this.editor.getSelectedText(),"1\n1\n1\n1\n1");this.editor.tabstopManager.tabNext();a.equal(this.editor.getSelectedText(),"2 3 1 3 2\n2 3 1 3 2");this.editor.tabstopManager.tabNext();a.equal(this.editor.getSelectedText(),"3 1 3\n3 1 3\n3 1 3");this.editor.tabstopManager.tabNext();a.equal(this.editor.getSelectedText(),"4 2 3 1 3 2 4");this.editor.tabstopManager.tabNext();a.equal(this.editor.getSelectedText(),"");this.editor.setValue("");c.insertSnippet(this.editor,"-${1:a$2}-${2:b$1}");a.equal(this.editor.getValue(),"-ab-ba");a.equal(this.editor.getSelectedText(),"ab\na");this.editor.tabstopManager.tabNext();a.equal(this.editor.getSelectedText(),"b\nba");this.editor.tabstopManager.tabNext();a.equal(this.editor.getSelectedText(),"")}}});if(typeof module!=="undefined"&&module===require.main){require("asyncjs").test.testcase(module.exports).exec()};