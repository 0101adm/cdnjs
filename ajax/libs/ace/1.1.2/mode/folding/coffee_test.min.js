if(typeof process!=="undefined"){require("amd-loader")}define(function(d,c,g){var f=d("../coffee").Mode;var e=d("../../edit_session").EditSession;var b=d("../../test/assertions");function a(l){var j=l.filter(function(m,n){return n%2==1});j=new e(j);var k=new f();j.setFoldStyle("markbeginend");j.setMode(k);var i=l.filter(function(m,n){return n%2==0});i.forEach(function(m,n){j.foldWidgets[n]=j.getFoldWidget(n)});i.forEach(function(m,o){m=m.split(",");var p=m[0]==">"?"start":m[0]=="<"?"end":"";b.equal(j.foldWidgets[o],p);if(!p){return}var n=j.getFoldWidgetRange(o);if(!m[1]){b.equal(n,null);return}b.equal(n.start.row,o);b.equal(n.end.row-n.start.row,parseInt(m[1]));h(m[2],n.start);h(m[3],n.end)});function h(m,n){if(!m){return}if(m=="l"){m=j.getLine(n.row).length}else{m=parseInt(m)}b.equal(n.column,m)}}g.exports={"test: coffee script indentation based folding":function(){a([">,1,l,l"," ## indented comment","","  # ","","",">,1,l,l"," # plain comment",""," # ",">,2"," function (x)=>","","  ","","  x++","","  ","","  ",">,2"," bar = ","","   foo: 1","","   baz: lighter"])}}});if(typeof module!=="undefined"&&module===require.main){require("asyncjs").test.testcase(module.exports).exec()};