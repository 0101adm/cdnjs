if(typeof process!=="undefined"){require("amd-loader");require("./test/mockdom")}define(function(f,g,e){var b=f("./edit_session").EditSession;var i=f("./editor").Editor;var j=f("./mode/javascript").Mode;var d=f("./undomanager").UndoManager;var h=f("./test/mockrenderer").MockRenderer;var a=f("./test/assertions");var c=f("./ext/whitespace");e.exports={"test: delete line from the middle":function(){var l=new b(["a","b","c","d"].join("\n"));var k=new i(new h(),l);k.moveCursorTo(1,1);k.removeLines();a.equal(l.toString(),"a\nc\nd");a.position(k.getCursorPosition(),1,0);k.removeLines();a.equal(l.toString(),"a\nd");a.position(k.getCursorPosition(),1,0);k.removeLines();a.equal(l.toString(),"a");a.position(k.getCursorPosition(),0,1);k.removeLines();a.equal(l.toString(),"");a.position(k.getCursorPosition(),0,0)},"test: delete multiple selected lines":function(){var l=new b(["a","b","c","d"].join("\n"));var k=new i(new h(),l);k.moveCursorTo(1,1);k.getSelection().selectDown();k.removeLines();a.equal(l.toString(),"a\nd");a.position(k.getCursorPosition(),1,0)},"test: delete first line":function(){var l=new b(["a","b","c"].join("\n"));var k=new i(new h(),l);k.removeLines();a.equal(l.toString(),"b\nc");a.position(k.getCursorPosition(),0,0)},"test: delete last should also delete the new line of the previous line":function(){var l=new b(["a","b","c",""].join("\n"));var k=new i(new h(),l);k.moveCursorTo(3,0);k.removeLines();a.equal(l.toString(),"a\nb\nc");a.position(k.getCursorPosition(),2,1);k.removeLines();a.equal(l.toString(),"a\nb");a.position(k.getCursorPosition(),1,1)},"test: indent block":function(){var m=new b(["a12345","b12345","c12345"].join("\n"));var l=new i(new h(),m);l.moveCursorTo(1,3);l.getSelection().selectDown();l.indent();a.equal(["a12345","    b12345","    c12345"].join("\n"),m.toString());a.position(l.getCursorPosition(),2,7);var k=l.getSelectionRange();a.position(k.start,1,7);a.position(k.end,2,7)},"test: indent selected lines":function(){var l=new b(["a12345","b12345","c12345"].join("\n"));var k=new i(new h(),l);k.moveCursorTo(1,0);k.getSelection().selectDown();k.indent();a.equal(["a12345","    b12345","c12345"].join("\n"),l.toString())},"test: no auto indent if cursor is before the {":function(){var l=new b("{",new j());var k=new i(new h(),l);k.moveCursorTo(0,0);k.onTextInput("\n");a.equal(["","{"].join("\n"),l.toString())},"test: outdent block":function(){var m=new b(["        a12345","    b12345","        c12345"].join("\n"));var l=new i(new h(),m);l.moveCursorTo(0,5);l.getSelection().selectDown();l.getSelection().selectDown();l.blockOutdent();a.equal(m.toString(),["    a12345","b12345","    c12345"].join("\n"));a.position(l.getCursorPosition(),2,1);var k=l.getSelectionRange();a.position(k.start,0,1);a.position(k.end,2,1);l.blockOutdent();a.equal(m.toString(),["a12345","b12345","c12345"].join("\n"));var k=l.getSelectionRange();a.position(k.start,0,0);a.position(k.end,2,0)},"test: outent without a selection should update cursor":function(){var l=new b("        12");var k=new i(new h(),l);k.moveCursorTo(0,3);k.blockOutdent("  ");a.equal(l.toString(),"    12");a.position(k.getCursorPosition(),0,0)},"test: comment lines should perserve selection":function(){var m=new b(["  abc","cde"].join("\n"),new j());var l=new i(new h(),m);c.detectIndentation(m);l.moveCursorTo(0,2);l.getSelection().selectDown();l.toggleCommentLines();a.equal(["//   abc","// cde"].join("\n"),m.toString());var k=l.getSelectionRange();a.position(k.start,0,5);a.position(k.end,1,5)},"test: uncomment lines should perserve selection":function(){var l=new b(["//   abc","//cde"].join("\n"),new j());var k=new i(new h(),l);l.setTabSize(2);k.moveCursorTo(0,1);k.getSelection().selectDown();k.getSelection().selectRight();k.getSelection().selectRight();k.toggleCommentLines();a.equal(["  abc","cde"].join("\n"),l.toString());a.range(k.getSelectionRange(),0,0,1,1)},"test: toggle comment lines twice should return the original text":function(){var l=new b(["  abc","cde","fg"],new j());var k=new i(new h(),l);k.moveCursorTo(0,0);k.getSelection().selectDown();k.getSelection().selectDown();k.toggleCommentLines();k.toggleCommentLines();a.equal(["  abc","cde","fg"].join("\n"),l.toString())},"test: comment lines - if the selection end is at the line start it should stay there":function(){var l=new b(["abc","cde"].join("\n"),new j());var k=new i(new h(),l);k.moveCursorTo(0,0);k.getSelection().selectDown();k.toggleCommentLines();a.range(k.getSelectionRange(),0,3,1,0);var l=new b(["abc","cde"].join("\n"),new j());var k=new i(new h(),l);k.moveCursorTo(1,0);k.getSelection().selectUp();k.toggleCommentLines();a.range(k.getSelectionRange(),0,3,1,0)},"test: move lines down should keep selection on moved lines":function(){var l=new b(["11","22","33","44"].join("\n"));var k=new i(new h(),l);k.moveCursorTo(0,1);k.getSelection().selectDown();k.moveLinesDown();a.equal(["33","11","22","44"].join("\n"),l.toString());a.position(k.getCursorPosition(),2,1);a.position(k.getSelection().getSelectionAnchor(),1,1);a.position(k.getSelection().getSelectionLead(),2,1);k.moveLinesDown();a.equal(["33","44","11","22"].join("\n"),l.toString());a.position(k.getCursorPosition(),3,1);a.position(k.getSelection().getSelectionAnchor(),2,1);a.position(k.getSelection().getSelectionLead(),3,1);k.moveLinesDown();a.equal(["33","44","11","22"].join("\n"),l.toString());a.position(k.getCursorPosition(),3,1);a.position(k.getSelection().getSelectionAnchor(),2,1);a.position(k.getSelection().getSelectionLead(),3,1)},"test: move lines up should keep selection on moved lines":function(){var l=new b(["11","22","33","44"].join("\n"));var k=new i(new h(),l);k.moveCursorTo(2,1);k.getSelection().selectDown();k.moveLinesUp();a.equal(l.toString(),["11","33","44","22"].join("\n"));a.position(k.getCursorPosition(),2,1);a.position(k.getSelection().getSelectionAnchor(),1,1);a.position(k.getSelection().getSelectionLead(),2,1);k.moveLinesUp();a.equal(l.toString(),["33","44","11","22"].join("\n"));a.position(k.getCursorPosition(),1,1);a.position(k.getSelection().getSelectionAnchor(),0,1);a.position(k.getSelection().getSelectionLead(),1,1)},"test: move line without active selection should not move cursor relative to the moved line":function(){var l=new b(["11","22","33","44"].join("\n"));var k=new i(new h(),l);k.moveCursorTo(1,1);k.clearSelection();k.moveLinesDown();a.equal(["11","33","22","44"].join("\n"),l.toString());a.position(k.getCursorPosition(),2,1);k.clearSelection();k.moveLinesUp();a.equal(["11","22","33","44"].join("\n"),l.toString());a.position(k.getCursorPosition(),1,1)},"test: copy lines down should keep selection":function(){var l=new b(["11","22","33","44"].join("\n"));var k=new i(new h(),l);k.moveCursorTo(1,1);k.getSelection().selectDown();k.copyLinesDown();a.equal(["11","22","33","22","33","44"].join("\n"),l.toString());a.position(k.getCursorPosition(),4,1);a.position(k.getSelection().getSelectionAnchor(),3,1);a.position(k.getSelection().getSelectionLead(),4,1)},"test: copy lines up should keep selection":function(){var l=new b(["11","22","33","44"].join("\n"));var k=new i(new h(),l);k.moveCursorTo(1,1);k.getSelection().selectDown();k.copyLinesUp();a.equal(["11","22","33","22","33","44"].join("\n"),l.toString());a.position(k.getCursorPosition(),2,1);a.position(k.getSelection().getSelectionAnchor(),1,1);a.position(k.getSelection().getSelectionLead(),2,1)},"test: input a tab with soft tab should convert it to spaces":function(){var l=new b("");var k=new i(new h(),l);l.setTabSize(2);l.setUseSoftTabs(true);k.onTextInput("\t");a.equal(l.toString(),"  ");l.setTabSize(5);k.onTextInput("\t");a.equal(l.toString(),"       ")},"test: input tab without soft tabs should keep the tab character":function(){var l=new b("");var k=new i(new h(),l);l.setUseSoftTabs(false);k.onTextInput("\t");a.equal(l.toString(),"\t")},"test: undo/redo for delete line":function(){var q=new b(["111","222","333"]);var p=new d();q.setUndoManager(p);var n=q.toString();var o=new i(new h(),q);o.removeLines();var m=q.toString();a.equal(m,"222\n333");q.$syncInformUndoManager();o.removeLines();var l=q.toString();a.equal(l,"333");q.$syncInformUndoManager();o.removeLines();var k=q.toString();a.equal(k,"");q.$syncInformUndoManager();p.undo();q.$syncInformUndoManager();a.equal(q.toString(),l);p.undo();q.$syncInformUndoManager();a.equal(q.toString(),m);p.undo();q.$syncInformUndoManager();a.equal(q.toString(),n);p.undo();q.$syncInformUndoManager();a.equal(q.toString(),n)},"test: remove left should remove character left of the cursor":function(){var l=new b(["123","456"]);var k=new i(new h(),l);k.moveCursorTo(1,1);k.remove("left");a.equal(l.toString(),"123\n56")},"test: remove left should remove line break if cursor is at line start":function(){var l=new b(["123","456"]);var k=new i(new h(),l);k.moveCursorTo(1,0);k.remove("left");a.equal(l.toString(),"123456")},"test: remove left should remove tabsize spaces if cursor is on a tab stop and preceeded by spaces":function(){var l=new b(["123","        456"]);l.setUseSoftTabs(true);l.setTabSize(4);var k=new i(new h(),l);k.moveCursorTo(1,8);k.remove("left");a.equal(l.toString(),"123\n    456")},"test: transpose at line start should be a noop":function(){var l=new b(["123","4567","89"]);var k=new i(new h(),l);k.moveCursorTo(1,0);k.transposeLetters();a.equal(l.getValue(),["123","4567","89"].join("\n"))},"test: transpose in line should swap the charaters before and after the cursor":function(){var l=new b(["123","4567","89"]);var k=new i(new h(),l);k.moveCursorTo(1,2);k.transposeLetters();a.equal(l.getValue(),["123","4657","89"].join("\n"))},"test: transpose at line end should swap the last two characters":function(){var l=new b(["123","4567","89"]);var k=new i(new h(),l);k.moveCursorTo(1,4);k.transposeLetters();a.equal(l.getValue(),["123","4576","89"].join("\n"))},"test: transpose with non empty selection should be a noop":function(){var l=new b(["123","4567","89"]);var k=new i(new h(),l);k.moveCursorTo(1,1);k.getSelection().selectRight();k.transposeLetters();a.equal(l.getValue(),["123","4567","89"].join("\n"))},"test: transpose should move the cursor behind the last swapped character":function(){var l=new b(["123","4567","89"]);var k=new i(new h(),l);k.moveCursorTo(1,2);k.transposeLetters();a.position(k.getCursorPosition(),1,3)},"test: remove to line end":function(){var l=new b(["123","4567","89"]);var k=new i(new h(),l);k.moveCursorTo(1,2);k.removeToLineEnd();a.equal(l.getValue(),["123","45","89"].join("\n"))},"test: remove to line end at line end should remove the new line":function(){var l=new b(["123","4567","89"]);var k=new i(new h(),l);k.moveCursorTo(1,4);k.removeToLineEnd();a.position(k.getCursorPosition(),1,4);a.equal(l.getValue(),["123","456789"].join("\n"))},"test: transform selection to uppercase":function(){var l=new b(["ajax","dot","org"]);var k=new i(new h(),l);k.moveCursorTo(1,0);k.getSelection().selectLineEnd();k.toUpperCase();a.equal(l.getValue(),["ajax","DOT","org"].join("\n"))},"test: transform word to uppercase":function(){var l=new b(["ajax","dot","org"]);var k=new i(new h(),l);k.moveCursorTo(1,0);k.toUpperCase();a.equal(l.getValue(),["ajax","DOT","org"].join("\n"));a.position(k.getCursorPosition(),1,0)},"test: transform selection to lowercase":function(){var l=new b(["AJAX","DOT","ORG"]);var k=new i(new h(),l);k.moveCursorTo(1,0);k.getSelection().selectLineEnd();k.toLowerCase();a.equal(l.getValue(),["AJAX","dot","ORG"].join("\n"))},"test: transform word to lowercase":function(){var l=new b(["AJAX","DOT","ORG"]);var k=new i(new h(),l);k.moveCursorTo(1,0);k.toLowerCase();a.equal(l.getValue(),["AJAX","dot","ORG"].join("\n"));a.position(k.getCursorPosition(),1,0)}}});if(typeof module!=="undefined"&&module===require.main){require("asyncjs").test.testcase(module.exports).exec()};