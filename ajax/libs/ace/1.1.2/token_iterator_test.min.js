if(typeof process!=="undefined"){require("amd-loader")}define(function(c,b,e){var d=c("./edit_session").EditSession;var g=c("./mode/javascript").Mode;var f=c("./token_iterator").TokenIterator;var a=c("./test/assertions");e.exports={"test: token iterator initialization in JavaScript document":function(){var h=["function foo(items) {","    for (var i=0; i<items.length; i++) {",'        alert(items[i] + "juhu");',"    } // Real Tab.","}"];var j=new d(h.join("\n"),new g());var i=new f(j,0,0);a.equal(i.getCurrentToken().value,"function");a.equal(i.getCurrentTokenRow(),0);a.equal(i.getCurrentTokenColumn(),0);i.stepForward();a.equal(i.getCurrentToken().value," ");a.equal(i.getCurrentTokenRow(),0);a.equal(i.getCurrentTokenColumn(),8);var i=new f(j,0,4);a.equal(i.getCurrentToken().value,"function");a.equal(i.getCurrentTokenRow(),0);a.equal(i.getCurrentTokenColumn(),0);i.stepForward();a.equal(i.getCurrentToken().value," ");a.equal(i.getCurrentTokenRow(),0);a.equal(i.getCurrentTokenColumn(),8);var i=new f(j,2,18);a.equal(i.getCurrentToken().value,"items");a.equal(i.getCurrentTokenRow(),2);a.equal(i.getCurrentTokenColumn(),14);i.stepForward();a.equal(i.getCurrentToken().value,"[");a.equal(i.getCurrentTokenRow(),2);a.equal(i.getCurrentTokenColumn(),19);var i=new f(j,4,0);a.equal(i.getCurrentToken().value,"}");a.equal(i.getCurrentTokenRow(),4);a.equal(i.getCurrentTokenColumn(),0);i.stepBackward();a.equal(i.getCurrentToken().value,"// Real Tab.");a.equal(i.getCurrentTokenRow(),3);a.equal(i.getCurrentTokenColumn(),6);var i=new f(j,5,0);a.equal(i.getCurrentToken(),null)},"test: token iterator initialization in text document":function(){var h=["Lorem ipsum dolor sit amet, consectetur adipisicing elit,","sed do eiusmod tempor incididunt ut labore et dolore magna","aliqua. Ut enim ad minim veniam, quis nostrud exercitation","ullamco laboris nisi ut aliquip ex ea commodo consequat."];var j=new d(h.join("\n"));var i=new f(j,0,0);a.equal(i.getCurrentToken().value,h[0]);a.equal(i.getCurrentTokenRow(),0);a.equal(i.getCurrentTokenColumn(),0);var i=new f(j,0,4);a.equal(i.getCurrentToken().value,h[0]);a.equal(i.getCurrentTokenRow(),0);a.equal(i.getCurrentTokenColumn(),0);var i=new f(j,2,18);a.equal(i.getCurrentToken().value,h[2]);a.equal(i.getCurrentTokenRow(),2);a.equal(i.getCurrentTokenColumn(),0);var i=new f(j,3,h[3].length-1);a.equal(i.getCurrentToken().value,h[3]);a.equal(i.getCurrentTokenRow(),3);a.equal(i.getCurrentTokenColumn(),0);var i=new f(j,4,0);a.equal(i.getCurrentToken(),null)},"test: token iterator step forward in JavaScript document":function(){var j=["function foo(items) {","    for (var i=0; i<items.length; i++) {",'        alert(items[i] + "juhu");',"    } // Real Tab.","}"];var n=new d(j.join("\n"),new g());var m=[];var h=n.getLength();for(var k=0;k<h;k++){m=m.concat(n.getTokens(k))}var l=new f(n,0,0);for(var k=1;k<m.length;k++){a.equal(l.stepForward(),m[k])}a.equal(l.stepForward(),null);a.equal(l.getCurrentToken(),null)},"test: token iterator step backward in JavaScript document":function(){var j=["function foo(items) {","     for (var i=0; i<items.length; i++) {",'         alert(items[i] + "juhu");',"     } // Real Tab.","}"];var n=new d(j.join("\n"),new g());var m=[];var h=n.getLength();for(var k=0;k<h;k++){m=m.concat(n.getTokens(k))}var l=new f(n,4,0);for(var k=m.length-2;k>=0;k--){a.equal(l.stepBackward(),m[k])}a.equal(l.stepBackward(),null);a.equal(l.getCurrentToken(),null)},"test: token iterator reports correct row and column":function(){var h=["function foo(items) {","    for (var i=0; i<items.length; i++) {",'        alert(items[i] + "juhu");',"    } // Real Tab.","}"];var j=new d(h.join("\n"),new g());var i=new f(j,0,0);i.stepForward();i.stepForward();a.equal(i.getCurrentToken().value,"foo");a.equal(i.getCurrentTokenRow(),0);a.equal(i.getCurrentTokenColumn(),9);i.stepForward();i.stepForward();i.stepForward();i.stepForward();i.stepForward();i.stepForward();i.stepForward();a.equal(i.getCurrentToken().value,"for");a.equal(i.getCurrentTokenRow(),1);a.equal(i.getCurrentTokenColumn(),4)}}});if(typeof module!=="undefined"&&module===require.main){require("asyncjs").test.testcase(module.exports).exec()};