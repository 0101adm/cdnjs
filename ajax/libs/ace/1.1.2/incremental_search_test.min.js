if(typeof process!=="undefined"){require("amd-loader")}define(function(f,h,d){var a=f("./edit_session").EditSession;var k=f("./editor").Editor;var j=f("./test/mockrenderer").MockRenderer;var e=f("./range").Range;var b=f("./test/assertions");var g=f("./incremental_search").IncrementalSearch;var i,c;function m(o,n){n=n||i.selection.getAllRanges();b.equal(n+"",o+"")}function l(){var p=i.session,n=[],o={drawSingleLineMarker:function(q,r){n=n.concat(r)}};p.$isearchHighlight.update([],o,p,{firstRow:0,lastRow:p.getRowLength()});return n}d.exports={name:"ACE incremental_search.js",setUp:function(){var n=new a(["abc123","xyz124"]);i=new k(new j(),n);c=new g()},"test: keyboard handler setup":function(){c.activate(i);b.equal(i.getKeyboardHandler(),c.$keyboardHandler);c.deactivate();b.notEqual(i.getKeyboardHandler(),c.$keyboardHandler)},"test: isearch highlight setup":function(){var o=i.session;c.activate(i);c.highlight("foo");var p=o.$isearchHighlight.id;b.ok(o.$isearchHighlight,"session has no isearch highlighter");b.equal(o.getMarkers()[p.id],p.id,"isearch highlight not in markers");c.deactivate();c.activate(i);c.highlight("bar");var n=o.$isearchHighlight.id;b.equal(n,p,"multiple isearch highlights")},"test: find simple text incrementally":function(){c.activate(i);var n=c.addChar("1"),o=l(i.session);m("Range: [0/3] -> [0/4]",[n],"range");m("Range: [0/3] -> [0/4],Range: [1/3] -> [1/4]",o,"highlight");n=c.addChar("2");o=l(i.session);m("Range: [0/3] -> [0/5]",[n],"range");m("Range: [0/3] -> [0/5],Range: [1/3] -> [1/5]",o,"highlight");n=c.addChar("3");o=l(i.session);m("Range: [0/3] -> [0/6]",[n],"range");m("Range: [0/3] -> [0/6]",o,"highlight");n=c.removeChar();o=l(i.session);m("Range: [0/3] -> [0/5]",[n],"range");m("Range: [0/3] -> [0/5],Range: [1/3] -> [1/5]",o,"highlight")},"test: forward / backward":function(){c.activate(i);c.addChar("1");c.addChar("2");var n=c.next();m("Range: [1/3] -> [1/5]",[n],"range");n=c.next();m("",[n],"range");n=c.next({backwards:true});m("Range: [1/5] -> [1/3]",[n],"range")},"test: cancelSearch":function(){c.activate(i);c.addChar("1");c.addChar("2");var n=c.cancelSearch(true);m("Range: [0/0] -> [0/0]",[n],"range");c.addChar("1");n=c.addChar("2");m("Range: [0/3] -> [0/5]",[n],"range")},"test: failing search keeps pos":function(){c.activate(i);c.addChar("1");c.addChar("2");var n=c.addChar("x");m("",[n],"range");b.position(i.getCursorPosition(),0,5)},"test: backwards search":function(){i.moveCursorTo(1,0);c.activate(i,true);c.addChar("1");var n=c.addChar("2");m("Range: [0/5] -> [0/3]",[n],"range");b.position(i.getCursorPosition(),0,3)},"test: forwards then backwards, same result, reoriented range":function(){c.activate(i);c.addChar("1");var n=c.addChar("2");m("Range: [0/3] -> [0/5]",[n],"range");b.position(i.getCursorPosition(),0,5);n=c.next({backwards:true});m("Range: [0/5] -> [0/3]",[n],"range");b.position(i.getCursorPosition(),0,3)},"test: reuse prev search via option":function(){c.activate(i);c.addChar("1");c.addChar("2");b.position(i.getCursorPosition(),0,5);c.deactivate();c.activate(i);c.next({backwards:false,useCurrentOrPrevSearch:true});b.position(i.getCursorPosition(),1,5)},"test: don't extend selection range if selection is empty":function(){c.activate(i);c.addChar("1");c.addChar("2");m("Range: [0/5] -> [0/5]",[i.getSelectionRange()],"sel range")},"test: extend selection range if selection exists":function(){c.activate(i);i.selection.selectTo(0,1);c.addChar("1");c.addChar("2");m("Range: [0/0] -> [0/5]",[i.getSelectionRange()],"sel range")},"test: extend selection in emacs mark mode":function(){var n=f("./keyboard/emacs");i.keyBinding.addKeyboardHandler(n.handler);n.handler.commands.setMark.exec(i);c.activate(i);c.addChar("1");c.addChar("2");m("Range: [0/0] -> [0/5]",[i.getSelectionRange()],"sel range")}}});if(typeof module!=="undefined"&&module===require.main){require("asyncjs").test.testcase(module.exports).exec()};