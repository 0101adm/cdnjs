if(typeof process!=="undefined"){require("amd-loader")}define(function(c,b,d){var f=c("./command_manager").CommandManager;var e=c("../lib/keys");var a=c("../test/assertions");d.exports={setUp:function(){this.command={name:"gotoline",bindKey:{mac:"Command-L",win:"Ctrl-L"},called:false,exec:function(g){this.called=true}};this.cm=new f("mac",[this.command])},"test: register command":function(){this.cm.exec("gotoline");a.ok(this.command.called)},"test: mac hotkeys":function(){var g=this.cm.findKeyCommand(e.KEY_MODS.command,"l");a.equal(g,this.command);var g=this.cm.findKeyCommand(e.KEY_MODS.ctrl,"l");a.equal(g,undefined)},"test: win hotkeys":function(){var g=new f("win",[this.command]);var h=g.findKeyCommand(e.KEY_MODS.command,"l");a.equal(h,undefined);var h=g.findKeyCommand(e.KEY_MODS.ctrl,"l");a.equal(h,this.command)},"test: remove command by object":function(){this.cm.removeCommand(this.command);this.cm.exec("gotoline");a.ok(!this.command.called);var g=this.cm.findKeyCommand(e.KEY_MODS.command,"l");a.equal(g,null)},"test: remove command by name":function(){this.cm.removeCommand("gotoline");this.cm.exec("gotoline");a.ok(!this.command.called);var g=this.cm.findKeyCommand(e.KEY_MODS.command,"l");a.equal(g,null)},"test: adding a new command with the same name as an existing one should remove the old one first":function(){var g={name:"gotoline",bindKey:{mac:"Command-L",win:"Ctrl-L"},called:false,exec:function(h){this.called=true}};this.cm.addCommand(g);this.cm.exec("gotoline");a.ok(g.called);a.ok(!this.command.called);a.equal(this.cm.findKeyCommand(e.KEY_MODS.command,"l"),g)},"test: adding commands and recording a macro":function(){var g="";this.cm.addCommands({togglerecording:function(i){i.cm.toggleRecording(i)},replay:function(i){i.cm.replay()},cm1:function(j,i){g+="1"+(i||"")},cm2:function(i){g+="2"}});var h=false;this._emit=function(){h=true};this.cm.exec("togglerecording",this);a.ok(this.cm.recording);a.ok(h);this.cm.exec("cm1",this,"-");this.cm.exec("cm2");this.cm.exec("replay",this);a.ok(!this.cm.recording);a.equal(g,"1-2");g="";this.cm.exec("replay",this);a.equal(g,"1-2")},"test: bindkeys":function(){this.cm.bindKeys({"Ctrl-L|Command-C":"cm1","Ctrl-R":"cm2"});var g=this.cm.findKeyCommand(e.KEY_MODS.command,"c");a.equal(g,"cm1");var g=this.cm.findKeyCommand(e.KEY_MODS.ctrl,"r");a.equal(g,"cm2");this.cm.bindKeys({"Ctrl-R":null});var g=this.cm.findKeyCommand(e.KEY_MODS.ctrl,"r");a.equal(g,null)},"test: binding keys without modifiers":function(){this.cm.bindKeys({R:"cm1","Shift-r":"cm2",Return:"cm4",Enter:"cm3"});var g=this.cm.findKeyCommand(-1,"r");a.equal(g,"cm1");var g=this.cm.findKeyCommand(-1,"R");a.equal(g,"cm2");var g=this.cm.findKeyCommand(0,"return");a.equal(g,"cm3")}}});if(typeof module!=="undefined"&&module===require.main){require("asyncjs").test.testcase(module.exports).exec()};