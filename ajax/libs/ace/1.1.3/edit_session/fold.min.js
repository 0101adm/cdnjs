define(function(d,f,a){var c=d("../range").Range;var g=d("../range_list").RangeList;var h=d("../lib/oop");var j=f.Fold=function(l,m){this.foldLine=null;this.placeholder=m;this.range=l;this.start=l.start;this.end=l.end;this.sameRow=l.start.row==l.end.row;this.subFolds=this.ranges=[]};h.inherits(j,g);(function(){this.toString=function(){return'"'+this.placeholder+'" '+this.range.toString()};this.setFoldLine=function(l){this.foldLine=l;this.subFolds.forEach(function(m){m.setFoldLine(l)})};this.clone=function(){var l=this.range.clone();var m=new j(l,this.placeholder);this.subFolds.forEach(function(n){m.subFolds.push(n.clone())});m.collapseChildren=this.collapseChildren;return m};this.addSubFold=function(p){if(this.range.isEqual(p)){return}if(!this.range.containsRange(p)){throw new Error("A fold can't intersect already existing fold"+p.range+this.range)}i(p,this.start);var t=p.start.row,l=p.start.column;for(var o=0,r=-1;o<this.subFolds.length;o++){r=this.subFolds[o].range.compare(t,l);if(r!=1){break}}var s=this.subFolds[o];if(r==0){return s.addSubFold(p)}var t=p.range.end.row,l=p.range.end.column;for(var m=o,r=-1;m<this.subFolds.length;m++){r=this.subFolds[m].range.compare(t,l);if(r!=1){break}}var n=this.subFolds[m];if(r==0){throw new Error("A fold can't intersect already existing fold"+p.range+this.range)}var q=this.subFolds.splice(o,m-o,p);p.setFoldLine(this.foldLine);return p};this.restoreRange=function(l){return k(l,this.start)}}).call(j.prototype);function b(l,m){l.row-=m.row;if(l.row==0){l.column-=m.column}}function i(l,m){b(l.start,m);b(l.end,m)}function e(l,m){if(l.row==0){l.column+=m.column}l.row+=m.row}function k(l,m){e(l.start,m);e(l.end,m)}});