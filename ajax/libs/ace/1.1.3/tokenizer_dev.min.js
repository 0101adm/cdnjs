define(function(c,a,e){var d=c("./tokenizer").Tokenizer;var f=100000;var b=function(g){d.call(this,g);this.getLineTokens=function(r,h){if(h&&typeof h!="string"){var m=h.slice(0);h=m[0]}else{var m=[]}var C=h||"start";var k=this.states[C];var q=this.matchMappings[C];var t=this.regExps[C];t.lastIndex=0;var p,s=[];var z=0;var x=[];function v(){x.push(h+"@"+z)}function B(){v();x=[];v()}var o={type:null,value:"",state:C};B();var w=100000;while(p=t.exec(r)){var j=q.defaultToken;var n=null;var u=p[0];var l=t.lastIndex;if(l-u.length>z){var A=r.substring(z,l-u.length);if(o.type==j){o.value+=A}else{if(o.type){s.push(o)}o={type:j,value:A}}}for(var y=0;y<p.length-2;y++){if(p[y+1]===undefined){continue}if(!w--){throw"infinite"+k[q[y]]+C}n=k[q[y]];if(n.onMatch){j=n.onMatch(u,C,m)}else{j=n.token}if(n.next){if(typeof n.next=="string"){C=n.next}else{C=n.next(C,m)}k=this.states[C];if(!k){window.console&&console.error&&console.error(C,"doesn't exist");C="start";k=this.states[C]}q=this.matchMappings[C];z=l;t=this.regExps[C];t.lastIndex=l;v()}break}if(u){if(typeof j=="string"){if((!n||n.merge!==false)&&o.type===j){o.value+=u}else{if(o.type){s.push(o)}o={type:j,value:u}}}else{if(o.type){s.push(o)}o={type:null,value:""};for(var y=0;y<j.length;y++){s.push(j[y])}}}if(z==r.length){break}z=l;if(s.length>f){o.value+=r.substr(z);C="start";break}}if(o.type){s.push(o)}return{tokens:s,state:m.length?m:C}}};b.prototype=d.prototype;a.Tokenizer=b});