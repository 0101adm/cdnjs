if(typeof process!=="undefined"){require("amd-loader")}define(function(d,b,e){var c=d("./tokenizer").Tokenizer;var a=d("./test/assertions");e.exports={"test: createSplitterRegexp":function(){var f=new c({});var g=f.createSplitterRegexp("(a)(b)(?=[x)(])");a.equal(g.source,"(a)(b)");var g=f.createSplitterRegexp("xc(?=([x)(]))");a.equal(g.source,"xc");var g=f.createSplitterRegexp("(xc(?=([x)(])))");a.equal(g.source,"(xc)");var g=f.createSplitterRegexp("(?=r)[(?=)](?=([x)(]))");a.equal(g.source,"(?=r)[(?=)]");var g=f.createSplitterRegexp("(?=r)[(?=)](\\?=t)");a.equal(g.source,"(?=r)[(?=)](\\?=t)");var g=f.createSplitterRegexp("[(?=)](\\?=t)");a.equal(g.source,"[(?=)](\\?=t)")},"test: removeCapturingGroups":function(){var f=new c({});var g=f.removeCapturingGroups("(ax(by))[()]");a.equal(g,"(?:ax(?:by))[()]")}}});if(typeof module!=="undefined"&&module===require.main){require("asyncjs").test.testcase(module.exports).exec()};