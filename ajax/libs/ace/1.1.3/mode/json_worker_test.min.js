if(typeof process!=="undefined"){require("amd-loader")}define(function(c,b,d){var a=c("../test/assertions");var e=c("./json_worker").JsonWorker;d.exports={setUp:function(){this.sender={on:function(){},callback:function(f,g){this.data=f},events:[],emit:function(f,g){this.events.push([f,g])}}},"test check valid json":function(){var f=new e(this.sender);f.setValue("{}");f.deferredUpdate.call();a.equal(this.sender.events[0][0],"ok")},"test check for syntax error":function(){var g=new e(this.sender);g.setValue(["{","juhu: 12","}"].join("\n"));g.deferredUpdate.call();var f=this.sender.events[0];a.equal(f[0],"error");a.equal(f[1].type,"error");a.equal(f[1].text,"Bad string");a.equal(f[1].row,1);a.equal(f[1].column,0)},"test check for syntax error at first char":function(){var g=new e(this.sender);g.setValue("x");g.deferredUpdate.call();var f=this.sender.events[0];a.equal(f[0],"error");a.equal(f[1].type,"error");a.equal(f[1].text,"Unexpected 'x'");a.equal(f[1].row,0);a.equal(f[1].column,0)}}});if(typeof module!=="undefined"&&module===require.main){require("asyncjs").test.testcase(module.exports).exec()};