define(function(c,b,d){var f=c("./lib/oop");var e=c("./lib/event_emitter").EventEmitter;var a=function(i,h){this.running=false;this.lines=[];this.states=[];this.currentLine=0;this.tokenizer=i;var g=this;this.$worker=function(){if(!g.running){return}var n=new Date();var p=g.currentLine;var l=-1;var m=g.doc;while(g.lines[p]){p++}var o=p;var j=m.getLength();var k=0;g.running=false;while(p<j){g.$tokenizeRow(p);l=p;do{p++}while(g.lines[p]);k++;if((k%5==0)&&(new Date()-n)>20){g.running=setTimeout(g.$worker,20);g.currentLine=p;return}}g.currentLine=p;if(o<=l){g.fireUpdateEvent(o,l)}}};(function(){f.implement(this,e);this.setTokenizer=function(g){this.tokenizer=g;this.lines=[];this.states=[];this.start(0)};this.setDocument=function(g){this.doc=g;this.lines=[];this.states=[];this.stop()};this.fireUpdateEvent=function(i,g){var h={first:i,last:g};this._signal("update",{data:h})};this.start=function(g){this.currentLine=Math.min(g||0,this.currentLine,this.doc.getLength());this.lines.splice(this.currentLine,this.lines.length);this.states.splice(this.currentLine,this.states.length);this.stop();this.running=setTimeout(this.$worker,700)};this.scheduleStart=function(){if(!this.running){this.running=setTimeout(this.$worker,700)}};this.$updateOnChange=function(k){var i=k.range;var h=i.start.row;var g=i.end.row-h;if(g===0){this.lines[h]=null}else{if(k.action=="removeText"||k.action=="removeLines"){this.lines.splice(h,g+1,null);this.states.splice(h,g+1,null)}else{var j=Array(g+1);j.unshift(h,1);this.lines.splice.apply(this.lines,j);this.states.splice.apply(this.states,j)}}this.currentLine=Math.min(h,this.currentLine,this.doc.getLength());this.stop()};this.stop=function(){if(this.running){clearTimeout(this.running)}this.running=false};this.getTokens=function(g){return this.lines[g]||this.$tokenizeRow(g)};this.getState=function(g){if(this.currentLine==g){this.$tokenizeRow(g)}return this.states[g]||"start"};this.$tokenizeRow=function(j){var g=this.doc.getLine(j);var i=this.states[j-1];var h=this.tokenizer.getLineTokens(g,i,j);if(this.states[j]+""!==h.state+""){this.states[j]=h.state;this.lines[j+1]=null;if(this.currentLine>j+1){this.currentLine=j+1}}else{if(this.currentLine==j){this.currentLine=j+1}}return this.lines[j]=h.tokens}}).call(a.prototype);b.BackgroundTokenizer=a});